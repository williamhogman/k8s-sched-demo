apiVersion: v1
kind: ServiceAccount
metadata:
  name: activator
  namespace: sandbox
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: activator-role
  namespace: sandbox
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: activator-role-binding
  namespace: sandbox
subjects:
- kind: ServiceAccount
  name: activator
  namespace: sandbox
roleRef:
  kind: Role
  name: activator-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: activator
  namespace: sandbox
  labels:
    app: activator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: activator
  template:
    metadata:
      labels:
        app: activator
    spec:
      serviceAccountName: activator
      containers:
      - name: activator
        image: activator:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: ACTIVATOR_SERVER_PORT
          value: "8080"
        - name: ACTIVATOR_SCHEDULER_ADDRESS
          value: "http://scheduler:50051"
        - name: ACTIVATOR_SCHEDULER_TIMEOUT
          value: "10s"
        - name: ACTIVATOR_LOGGING_DEV
          value: "true"
        # HTTP client configuration
        - name: ACTIVATOR_HTTP_CLIENT_TIMEOUT
          value: "30s"
        - name: ACTIVATOR_HTTP_CLIENT_MAX_RETRIES
          value: "5"
        - name: ACTIVATOR_HTTP_CLIENT_INITIAL_BACKOFF
          value: "1s"
        - name: ACTIVATOR_HTTP_CLIENT_MAX_BACKOFF
          value: "10s"
        - name: ACTIVATOR_HTTP_CLIENT_BACKOFF_FACTOR
          value: "2.0"
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: activator
  namespace: sandbox
spec:
  selector:
    app: activator
  ports:
  - port: 80
    targetPort: 8080
    name: http
  type: ClusterIP 