syntax = "proto3";

package scheduler;
option go_package = "github.com/williamhogman/k8s-sched-demo/gen/go/will/scheduler/v1;schedulerv1";

// SandboxEventService sends notifications about sandbox lifecycle events
service SandboxEventService {
  // SendSandboxEvent sends a single sandbox event
  rpc SendSandboxEvent (SandboxEvent) returns (SandboxEventResponse) {}
}

// SandboxEventResponse is the response to a SendSandboxEvent request
message SandboxEventResponse {
  // Whether the event was successfully processed
  bool success = 1;
  
  // Error message if unsuccessful
  string error = 2;
}

// SandboxEvent represents an event in the lifecycle of a sandbox
message SandboxEvent {
  // The ID of the sandbox
  string sandbox_id = 1;
  
  // Type of the event
  SandboxEventType event_type = 2;
  
  // Timestamp when the event occurred (Unix timestamp)
  int64 timestamp = 3;
}

// SandboxEventType defines the type of sandbox event
enum SandboxEventType {
  // Default value, should not be used
  SANDBOX_EVENT_TYPE_UNSPECIFIED = 0;
  
  // Sandbox is no longer usable (released, expired, or failed)
  // This is the only event type that matters for clients
  SANDBOX_EVENT_TYPE_TERMINATED = 1;
} 